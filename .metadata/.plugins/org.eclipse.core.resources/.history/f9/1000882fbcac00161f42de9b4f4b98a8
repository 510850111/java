package me.hekuan;

import java.awt.BorderLayout;
import java.awt.Frame;
import java.awt.Menu;
import java.awt.MenuBar;
import java.awt.MenuItem;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.swing.JFrame;

@SuppressWarnings("serial")
public class Main extends Frame {

	final static Snake snake = new Snake();
	static Food food = new Food();
	static Ground ground = new Ground();
	static GamePanel gamePanel = new GamePanel();
	final static Controller controller = new Controller(snake, food, ground, gamePanel);
	
	public static void main(String[] args) {

		init();
	}

	/**
	 * 初始化贪吃蛇的图形界面,包括Frame的大小和其他属性,监听键盘等等事件
	 */
	public static void init() {
		

		while (snake == null || food == null || ground == null || gamePanel == null || controller == null) {
			continue;
		}

		final JFrame frame = new JFrame("贪吃蛇0.0r01");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(1005, 1020);

		// 创建菜单栏
		MenuBar menuBar = new MenuBar();

		// 创建菜单
		Menu menu = new Menu("文件");
		Menu menu2 = new Menu("游戏");
		Menu menu3 = new Menu("设置");
		Menu menu4 = new Menu("帮助");

		// 创建菜单项
		MenuItem exit = new MenuItem("退出");
		final MenuItem newGame = new MenuItem("开始新游戏");
		final MenuItem pauseGame = new MenuItem("暂停游戏");
		final MenuItem openControlPanel = new MenuItem("打开控制面板");
		MenuItem help = new MenuItem("帮助文件");
		MenuItem about = new MenuItem("关于");
		

		// 添加菜单项到菜单
		menu.add(exit);
		
		menu2.add(newGame);
		menu2.add(pauseGame);
		
		menu3.add(openControlPanel);
		
		menu4.add(help);
		menu4.add(about);
		
		menuBar.add(menu);
		menuBar.add(menu2);
		menuBar.add(menu3);
		menuBar.add(menu4);

		// 把菜单栏添加进窗体
		frame.setMenuBar(menuBar);

		// 对菜单项的应答
		
		/**
		 * 退出游戏
		 */
		exit.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		
		/**
		 * 开始一个新游戏
		 */
		newGame.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		
		/**
		 * 暂停游戏和开始游戏
		 */
		pauseGame.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if (pauseGame.getLabel() == "暂停游戏") {
					Snake.life = false;
					pauseGame.setLabel("继续游戏");
				}else {
					Snake.life = true;
					pauseGame.setLabel("暂停游戏");
				}
				
			}
		});
		
		
		/**
		 * 打开游戏的控制面板
		 */
		openControlPanel.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				new ControlPanel();
			}
		});
		
		

		frame.add(gamePanel, BorderLayout.CENTER);

		gamePanel.addKeyListener(controller);
		snake.addSnakleListener(controller);

		frame.addKeyListener(controller);

		UI.setJFrameLocateCenter(frame);

		//正式开始游戏
		controller.newGame();
		
		frame.setResizable(false);
		frame.setVisible(true);
		
		
	}

}
